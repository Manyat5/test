E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\bin\java.exe "-javaagent:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\lib\idea_rt.jar=56989:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\bin" -Dfile.encoding=UTF-8 -classpath E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\charsets.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\access-bridge-64.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\cldrdata.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\dnsns.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\jaccess.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\localedata.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\nashorn.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\sunec.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\sunjce_provider.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\sunmscapi.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\sunpkcs11.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\ext\zipfs.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\jce.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\jsse.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\management-agent.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\resources.jar;E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\lib\rt.jar;E:\WWY\workplace\test\jmh-test\target\classes;E:\WWY\repository\org\openjdk\jmh\jmh-generator-annprocess\1.23\jmh-generator-annprocess-1.23.jar;E:\WWY\repository\org\openjdk\jmh\jmh-core\1.23\jmh-core-1.23.jar;E:\WWY\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;E:\WWY\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar sample.JMHSample_10_ConstantFold
# JMH version: 1.23
# VM version: JDK 1.8.0_202, OpenJDK 64-Bit Server VM, 25.202-b08
# VM invoker: E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\bin\java.exe
# VM options: -javaagent:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\lib\idea_rt.jar=56989:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: sample.JMHSample_10_ConstantFold.baseline

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 3.759 ns/op
# Warmup Iteration   2: 3.654 ns/op
# Warmup Iteration   3: 2.740 ns/op
# Warmup Iteration   4: 2.579 ns/op
# Warmup Iteration   5: 2.859 ns/op
Iteration   1: 2.381 ns/op
Iteration   2: 2.449 ns/op
Iteration   3: 2.772 ns/op
Iteration   4: 2.785 ns/op
Iteration   5: 2.418 ns/op


Result "sample.JMHSample_10_ConstantFold.baseline":
  2.561 ±(99.9%) 0.771 ns/op [Average]
  (min, avg, max) = (2.381, 2.561, 2.785), stdev = 0.200
  CI (99.9%): [1.790, 3.331] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_202, OpenJDK 64-Bit Server VM, 25.202-b08
# VM invoker: E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\bin\java.exe
# VM options: -javaagent:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\lib\idea_rt.jar=56989:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: sample.JMHSample_10_ConstantFold.measureRight

# Run progress: 25.00% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: 17.208 ns/op
# Warmup Iteration   2: 17.531 ns/op
# Warmup Iteration   3: 17.211 ns/op
# Warmup Iteration   4: 17.168 ns/op
# Warmup Iteration   5: 17.150 ns/op
Iteration   1: 17.128 ns/op
Iteration   2: 17.131 ns/op
Iteration   3: 17.155 ns/op
Iteration   4: 17.128 ns/op
Iteration   5: 17.132 ns/op


Result "sample.JMHSample_10_ConstantFold.measureRight":
  17.135 ±(99.9%) 0.044 ns/op [Average]
  (min, avg, max) = (17.128, 17.135, 17.155), stdev = 0.012
  CI (99.9%): [17.090, 17.179] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_202, OpenJDK 64-Bit Server VM, 25.202-b08
# VM invoker: E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\bin\java.exe
# VM options: -javaagent:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\lib\idea_rt.jar=56989:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: sample.JMHSample_10_ConstantFold.measureWrong_1

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 3.858 ns/op
# Warmup Iteration   2: 3.335 ns/op
# Warmup Iteration   3: 2.579 ns/op
# Warmup Iteration   4: 2.584 ns/op
# Warmup Iteration   5: 2.861 ns/op
Iteration   1: 2.821 ns/op
Iteration   2: 2.875 ns/op
Iteration   3: 2.367 ns/op
Iteration   4: 2.594 ns/op
Iteration   5: 2.653 ns/op


Result "sample.JMHSample_10_ConstantFold.measureWrong_1":
  2.662 ±(99.9%) 0.776 ns/op [Average]
  (min, avg, max) = (2.367, 2.662, 2.875), stdev = 0.202
  CI (99.9%): [1.886, 3.438] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 1.8.0_202, OpenJDK 64-Bit Server VM, 25.202-b08
# VM invoker: E:\WWY\resources\java_jdk\soft\jdk-8.0.202.08\jre\bin\java.exe
# VM options: -javaagent:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\lib\idea_rt.jar=56989:E:\WWY\ide\JetBrains\IntelliJ IDEA 2018.3.4\bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: sample.JMHSample_10_ConstantFold.measureWrong_2

# Run progress: 75.00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: 2.924 ns/op
# Warmup Iteration   2: 3.678 ns/op
# Warmup Iteration   3: 2.806 ns/op
# Warmup Iteration   4: 2.637 ns/op
# Warmup Iteration   5: 2.450 ns/op
Iteration   1: 2.663 ns/op
Iteration   2: 2.673 ns/op
Iteration   3: 2.539 ns/op
Iteration   4: 2.597 ns/op
Iteration   5: 2.747 ns/op


Result "sample.JMHSample_10_ConstantFold.measureWrong_2":
  2.644 ±(99.9%) 0.306 ns/op [Average]
  (min, avg, max) = (2.539, 2.644, 2.747), stdev = 0.079
  CI (99.9%): [2.338, 2.950] (assumes normal distribution)


# Run complete. Total time: 00:06:43

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                 Mode  Cnt   Score   Error  Units
JMHSample_10_ConstantFold.baseline        avgt    5   2.561 ± 0.771  ns/op
JMHSample_10_ConstantFold.measureRight    avgt    5  17.135 ± 0.044  ns/op
JMHSample_10_ConstantFold.measureWrong_1  avgt    5   2.662 ± 0.776  ns/op
JMHSample_10_ConstantFold.measureWrong_2  avgt    5   2.644 ± 0.306  ns/op

Process finished with exit code 0
